# Input file for uniaxial tensile loading of single crystal aluminum
# Mark Tschopp, November 2010
# several places to pay attention:
# 1. atom style
# 2. pair potential (how many percent of error is associated?)
# 		> how are the errors are calculated?
# 3. time step
# 4. dump to where
# 5. dump what

# ------------------------ INITIALIZATION ----------------------------
units 		metal
dimension	3
boundary	p	p	p
atom_style	atomic_rad
variable 	latparam equal 4.05
log			log.debug.tensile

# ----------------------- ATOM DEFINITION ----------------------------
lattice		fcc ${latparam}
region		whole block 0 10 0 10 0 10
create_box	1 whole
lattice 	fcc ${latparam} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
create_atoms	1 region whole

# ------------------------ FORCE FIELDS ------------------------------

#****************USE THIS TO TEST******************
pair_style	eam/rad
pair_coeff 		* * Al99.PC0.05.eam.alloy.rad.txt Al # pc = 0.5   error generating

# to test with error = 0 use this potential
# pair_coeff	* * Al99.eam.alloy.005pcrad_NULL_noerror Al 

#****************USE THIS TO RUN REFRENCE***********
# pair_style	eam/alloy
# pair_coeff	* * Al99.eam.alloy Al

# ------------------------- SETTINGS ---------------------------------
compute csym all centro/atom fcc
compute peratom all pe/atom 

######################################
# EQUILIBRATION
reset_timestep	0
timestep	0.001 # default
# timestep	0.0001 # tiny time step
velocity all create 300 12345 mom yes rot no
fix 1 all npt temp 300 300 1 iso 0 0 1 drag 1 

# Set thermo output
thermo 50
# thermo 1 # debug mode

# thermo_style custom step lx ly lz press pxx pyy pzz pe temp
# IMPLEMENTATION HERE

# VERSION add rad variables .v1 .v2
# thermo_style custom step lx ly lz press pxx pyy pzz pxxrad pyyrad pzzrad pe temp

# VERSION ublb separation .v3
thermo_style custom step lx ly lz press pxx pxxrad pyy pyyrad pzz pzzrad pe temp

# Run for at least 10 picosecond (assuming 1 fs timestep)
run 	20000 # default
# run 	200000

# Use this if debug 
# run 	1000
# run 200 
unfix 1

# Store final cell length for strain calculations
variable tmp equal "lx"
variable L0 equal ${tmp}
print "Initial Length, L0: ${L0}"

######################################
# DEFORMATION
reset_timestep	0
set atom * xrad 0 yrad 0 zrad 0 vxrad 0 vyrad 0 vzrad 0
fix		1 all npt temp 300 300 1 y 0 0 1 z 0 0 1 drag 1

variable srate equal 1.0e10
# variable srate equal 1.0e9 # tiny time step

variable srate1 equal "v_srate / 1.0e12"
fix		2 all deform 1 x erate ${srate1} units box remap x

# Output strain and stress info to file
# for units metal, pressure is in [bars] = 100 [kPa] = 1/10000 [GPa]
# p2, p3, p4 are in GPa
variable strain equal "(lx - v_L0)/v_L0"
variable p1 equal "v_strain"
variable p2 equal "-pxx/10000"
variable p3 equal "-pyy/10000"
variable p4 equal "-pzz/10000"
	
# fix def1 all print 100 "${p1} ${p2} ${p3} ${p4}" file Al99.eam_rad.alloy.def1.txt screen no
# IMPLEMENTATION HERE
variable p5 equal "-pxxrad/10000"

# VERSION add rad variables
variable p6 equal "-pyyrad/10000"
variable p7 equal "-pzzrad/10000"

# VERSION ublb coupled/decoupled scheme
# variable p6 equal "-pxxub/10000"
# variable p7 equal "-pxxlb/10000"

fix def1 all print 20 "${p1} ${p2} ${p3} ${p4} ${p5} ${p6} ${p7}" file Al99.eam_rad.alloy.def1.txt screen no

# Use cfg for AtomEye
# dump 		1 all cfg 250 dump.tensile_*.cfg mass type xs ys zs c_csym c_peratom fx fy fz
# dump_modify 1 element Al

# print output to a text file every n timesteps
dump		2 all custom 50 dump.xyz_rvf_rad.tensile_*.txt mass type id x y z vx vy vz fx fy fz xrad yrad zrad vxrad vyrad vzrad fxrad fyrad fzrad # use for rad developement
# dump		2 all custom 50 dump.xyz_rvf_rad.tensile_*.txt mass type id x y z vx vy vz fx fy fz xrad yrad zrad vxrad vyrad vzrad fxrad fyrad fzrad xub yub zub vxub vyub vzub fxub fyub fzub xlb ylb zlb vxlb vylb vzlb fxlb fylb fzlb # use for ublb developement

# Display thermo
thermo 	50
# thermo 1
# thermo_style	custom step v_strain temp v_p2 v_p3 v_p4 ke pe press

# IMPLEMENTATION HERE
thermo_style	custom step v_strain temp v_p2 v_p3 v_p4 v_p5 v_p6 v_p7 ke pe press
run	20000

######################################
# SIMULATION DONE
print "All done"
